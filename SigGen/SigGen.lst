CCS PCM C Compiler, Version 5.091, 13314               23-ago.-21 16:04

               Filename:   C:\Users\Gustavo\Documents\05 YouTube\PCF8574\SigGen\SigGen.lst

               ROM used:   275 words (3%)
                           Largest free fragment is 2048
               RAM used:   17 (5%) at main() level
                           27 (7%) worst case
               Stack used: 0 locations
               Stack size: 8

0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   0BF
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.5
001A:  GOTO   01D
001B:  BTFSC  0C.5
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   031
.................... #INCLUDE<16F887.h>
.................... //////////// Standard Header file for the PIC16F887 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F887
*
004E:  CLRF   35
004F:  MOVF   04,W
0050:  MOVWF  34
0051:  BCF    35.0
0052:  BTFSC  03.7
0053:  BSF    35.0
0054:  SWAPF  2E,W
0055:  IORLW  F0
0056:  MOVWF  30
0057:  ADDWF  30,F
0058:  ADDLW  E2
0059:  MOVWF  31
005A:  ADDLW  32
005B:  MOVWF  33
005C:  MOVF   2E,W
005D:  ANDLW  0F
005E:  ADDWF  31,F
005F:  ADDWF  31,F
0060:  ADDWF  33,F
0061:  ADDLW  E9
0062:  MOVWF  32
0063:  ADDWF  32,F
0064:  ADDWF  32,F
0065:  SWAPF  2D,W
0066:  ANDLW  0F
0067:  ADDWF  32,F
0068:  ADDWF  33,F
0069:  RLF    32,F
006A:  RLF    33,F
006B:  COMF   33,F
006C:  RLF    33,F
006D:  MOVF   2D,W
006E:  ANDLW  0F
006F:  ADDWF  33,F
0070:  RLF    30,F
0071:  MOVLW  07
0072:  MOVWF  2F
0073:  MOVLW  0A
0074:  ADDWF  33,F
0075:  DECF   32,F
0076:  BTFSS  03.0
0077:  GOTO   074
0078:  ADDWF  32,F
0079:  DECF   31,F
007A:  BTFSS  03.0
007B:  GOTO   078
007C:  ADDWF  31,F
007D:  DECF   30,F
007E:  BTFSS  03.0
007F:  GOTO   07C
0080:  ADDWF  30,F
0081:  DECF   2F,F
0082:  BTFSS  03.0
0083:  GOTO   080
0084:  MOVLW  2F
0085:  MOVWF  04
0086:  BCF    03.7
0087:  MOVLW  07
0088:  ANDWF  34,W
0089:  BCF    34.6
008A:  ADDWF  04,F
008B:  MOVLW  33
008C:  SUBWF  04,W
008D:  BTFSC  03.2
008E:  BSF    34.6
008F:  MOVF   00,W
0090:  MOVWF  77
0091:  BTFSS  03.2
0092:  GOTO   09B
0093:  BTFSC  34.6
0094:  GOTO   09B
0095:  BTFSC  34.4
0096:  GOTO   0A3
0097:  BTFSC  34.3
0098:  GOTO   09B
0099:  MOVLW  20
009A:  GOTO   09E
009B:  BSF    34.3
009C:  BCF    34.4
009D:  MOVLW  30
009E:  ADDWF  77,F
009F:  MOVF   77,W
00A0:  BTFSS  0C.4
00A1:  GOTO   0A0
00A2:  MOVWF  19
00A3:  INCF   04,F
00A4:  BTFSS  34.6
00A5:  GOTO   08B
.................... 
.................... #list
.................... 
.................... #FUSES XT,PUT,NOPROTECT,BROWNOUT,NOLVP,NOWDT
.................... #USE delay(internal=8000000)
*
00AE:  MOVLW  08
00AF:  SUBWF  2C,F
00B0:  BTFSS  03.0
00B1:  GOTO   0BE
00B2:  MOVLW  2C
00B3:  MOVWF  04
00B4:  BCF    03.7
00B5:  BCF    03.0
00B6:  RRF    00,F
00B7:  MOVF   00,W
00B8:  BTFSC  03.2
00B9:  GOTO   0BE
00BA:  GOTO   0BC
00BB:  NOP
00BC:  DECFSZ 00,F
00BD:  GOTO   0BB
00BE:  RETURN
.................... #USE RS232(baud=9600,xmit=PIN_C6,rcv=PIN_C7, BITS=8)
.................... #use standard_io(c)
.................... 
.................... #BYTE PORTA=5;
.................... 
.................... 
.................... #DEFINE out PORTA,0
.................... /***************************Variables globales********************************/
.................... char data=0;
.................... unsigned int16 delay=0; //mitad del periodo en ms
.................... /***************************Interrupciones************************************/
.................... #int_RDA
.................... void RDA_isr(){
....................    data=getc();
*
0031:  BTFSS  0C.5
0032:  GOTO   031
0033:  MOVF   1A,W
0034:  MOVWF  28
....................    if(data=='+')
0035:  MOVF   28,W
0036:  SUBLW  2B
0037:  BTFSS  03.2
0038:  GOTO   03E
....................       delay=delay+100;
0039:  MOVLW  64
003A:  ADDWF  29,F
003B:  BTFSC  03.0
003C:  INCF   2A,F
003D:  GOTO   048
....................    else if(data=='-')
003E:  MOVF   28,W
003F:  SUBLW  2D
0040:  BTFSS  03.2
0041:  GOTO   048
....................       delay=delay-100;
0042:  MOVLW  64
0043:  SUBWF  29,F
0044:  MOVLW  00
0045:  BTFSS  03.0
0046:  MOVLW  01
0047:  SUBWF  2A,F
....................       
....................    printf("%lu\n",delay);
0048:  MOVLW  10
0049:  MOVWF  04
004A:  MOVF   2A,W
004B:  MOVWF  2E
004C:  MOVF   29,W
004D:  MOVWF  2D
*
00A6:  MOVLW  0A
00A7:  BTFSS  0C.4
00A8:  GOTO   0A7
00A9:  MOVWF  19
00AA:  BCF    0C.5
00AB:  BCF    0A.3
00AC:  BCF    0A.4
00AD:  GOTO   01D
.................... }
.................... void main(){
*
00BF:  MOVF   03,W
00C0:  ANDLW  1F
00C1:  MOVWF  03
00C2:  MOVLW  71
00C3:  BSF    03.5
00C4:  MOVWF  0F
00C5:  CLRF   10
00C6:  MOVF   0F,W
00C7:  BSF    03.6
00C8:  BCF    07.3
00C9:  MOVLW  0C
00CA:  BCF    03.6
00CB:  MOVWF  19
00CC:  MOVLW  A2
00CD:  MOVWF  18
00CE:  MOVLW  90
00CF:  BCF    03.5
00D0:  MOVWF  18
00D1:  MOVLW  FF
00D2:  MOVWF  27
00D3:  CLRF   28
00D4:  CLRF   2A
00D5:  CLRF   29
00D6:  BSF    03.5
00D7:  BSF    03.6
00D8:  MOVF   09,W
00D9:  ANDLW  C0
00DA:  MOVWF  09
00DB:  BCF    03.6
00DC:  BCF    1F.4
00DD:  BCF    1F.5
00DE:  MOVLW  00
00DF:  BSF    03.6
00E0:  MOVWF  08
00E1:  BCF    03.5
00E2:  CLRF   07
00E3:  CLRF   08
00E4:  CLRF   09
00E5:  BCF    03.7
.................... set_tris_a(0b11111110);
00E6:  MOVLW  FE
00E7:  BSF    03.5
00E8:  BCF    03.6
00E9:  MOVWF  05
.................... bit_clear(out);
00EA:  BCF    03.5
00EB:  BCF    05.0
.................... 
.................... ENABLE_INTERRUPTS(GLOBAL);
00EC:  MOVLW  C0
00ED:  IORWF  0B,F
.................... ENABLE_INTERRUPTS(int_RDA);
00EE:  BSF    03.5
00EF:  BSF    0C.5
.................... 
.................... delay=2000;
00F0:  MOVLW  07
00F1:  BCF    03.5
00F2:  MOVWF  2A
00F3:  MOVLW  D0
00F4:  MOVWF  29
.................... 
.................... while(true){
.................... 
....................    bit_set(out);
00F5:  BSF    05.0
....................    delay_us(delay);
00F6:  MOVF   2A,W
00F7:  MOVWF  2B
00F8:  INCF   2B,F
00F9:  DECF   2B,F
00FA:  BTFSC  03.2
00FB:  GOTO   100
00FC:  MOVLW  FF
00FD:  MOVWF  2C
00FE:  CALL   0AE
00FF:  GOTO   0F9
0100:  MOVF   29,W
0101:  MOVWF  2C
0102:  CALL   0AE
....................    bit_clear(out);
0103:  BCF    05.0
....................    delay_us(delay);
0104:  MOVF   2A,W
0105:  MOVWF  2B
0106:  INCF   2B,F
0107:  DECF   2B,F
0108:  BTFSC  03.2
0109:  GOTO   10E
010A:  MOVLW  FF
010B:  MOVWF  2C
010C:  CALL   0AE
010D:  GOTO   107
010E:  MOVF   29,W
010F:  MOVWF  2C
0110:  CALL   0AE
0111:  GOTO   0F5
....................   
.................... }
.................... }
0112:  SLEEP

Configuration Fuses:
   Word  1: 2FE4   INTRC_IO NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
